{"version":3,"sources":["PlayerIcon.jsx","PlayerButton.jsx","ConnectionStatus.jsx","Button.jsx","Container.jsx","GamePage.jsx","Title.jsx","CodeInput.jsx","ConnectButton.jsx","VerticalContainer.jsx","LinkButton.jsx","DiscordButton.jsx","CodePage.jsx","App.jsx","index.js"],"names":["PlayerIconWrapper","styled","img","PlayerIcon","player","src","color","alive","alt","backgroundColors","black","cyan","green","orange","pink","purple","yellow","lime","red","white","brown","blue","PlayerButtonWrapper","button","PlayerButton","loading","sendAliveUpdate","ColoredPlayerButton","disabled","onClick","name","ConnectionStatusText","p","Dot","span","YellowDot","ConnectionStatus","channelName","reconnecting","require","default","ExternalContainer","div","InternalContainer","Container","children","key","TopIcon","FullButton","Button","HalfButton","FlexContainer","PlayerContainer","TopBar","GamePage","gameState","sendStageUpdate","channel_name","game_stage","players","map","Title","className","height","CodeInputWrapper","input","CodeInput","syncId","setSyncId","placeholder","value","maxLength","syncIdLength","onInput","e","target","length","slice","toUpperCase","autoComplete","autoCorrect","autoCapitalize","spellCheck","ConnectButtonWrapper","ConnectButton","connectToGame","VerticalContainer","LinkButton","link","margin","LinkButtonWrapper","Color","darken","window","open","DiscordIcon","DiscordButton","CodePage","centerVertically","NoSleep","enable","App","idFromPath","location","pathname","split","join","useState","connected","setConnected","setReconnecting","socket","setSocket","setLoading","sync_id","setGameState","emit","JSON","stringify","stage","newSocket","openSocket","process","REACT_APP_SYNC_SERVER_ADDRESS","on","state","Sentry","dsn","REACT_APP_SENTRY_DSN","integrations","Integrations","BrowserTracing","tracingOrigins","beforeNavigate","context","replace","tracesSampleRate","rootElement","document","getElementById","hasChildNodes","ReactDOM","hydrate","render"],"mappings":"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","file":"static/js/main.2d0a366f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst PlayerIconWrapper = styled.img`\r\n  height: 35px;\r\n`;\r\n\r\nexport default function PlayerIcon({ player }) {\r\n  return (\r\n    <PlayerIconWrapper\r\n      src={`crewmates/${player.color}${player.alive ? \"\" : \"_dead\"}.png`}\r\n      alt={player.color}\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PlayerIcon from \"./PlayerIcon\";\r\n\r\nconst backgroundColors = {\r\n  black: \"#72808B\",\r\n  cyan: \"#68B4A7\",\r\n  green: \"#4E885D\",\r\n  orange: \"#E2A45B\",\r\n  pink: \"#F59CD8\",\r\n  purple: \"#A171DF\",\r\n  yellow: \"#E0E05B\",\r\n  lime: \"#90DB84\",\r\n  red: \"#DD6867\",\r\n  white: \"#B3BED2\",\r\n  brown: \"#A07E58\",\r\n  blue: \"#576AD4\",\r\n};\r\n\r\nconst PlayerButtonWrapper = styled.button`\r\n  font-family: \"Poppins\";\r\n  font-weight: bold;\r\n  color: white;\r\n  border: none;\r\n  outline: white;\r\n  border-radius: 5px;\r\n  margin-bottom: 10px;\r\n  height: 80px;\r\n  width: calc(50% - 5px);\r\n`;\r\n\r\nexport default function PlayerButton({ player, loading, sendAliveUpdate }) {\r\n  const ColoredPlayerButton = styled(PlayerButtonWrapper)`\r\n    background-color: ${backgroundColors[player.color]};\r\n    filter: ${player.alive ? \"\" : \"brightness(0.6)\"};\r\n  `;\r\n\r\n  return (\r\n    <ColoredPlayerButton\r\n      disabled={loading}\r\n      onClick={() => {\r\n        sendAliveUpdate(player.color, !player.alive);\r\n      }}\r\n    >\r\n      <PlayerIcon player={player} />\r\n      <div>{player.name}</div>\r\n    </ColoredPlayerButton>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ConnectionStatusText = styled.p`\r\n  font-family: \"Poppins\";\r\n  font-size: 14px;\r\n  text-transform: uppercase;\r\n  vertical-align: center;\r\n  margin-top: 30px;\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst Dot = styled.span`\r\n  height: 10px;\r\n  width: 10px;\r\n  background-color: #6acc86;\r\n  border-radius: 50%;\r\n  display: inline-block;\r\n  margin-right: 5px;\r\n`;\r\n\r\nconst YellowDot = styled(Dot)`\r\n  background-color: #e0e05b;\r\n`;\r\n\r\nexport default function ConnectionStatus({ channelName, reconnecting }) {\r\n  return (\r\n    <ConnectionStatusText>\r\n      {reconnecting ? (\r\n        <div>\r\n          <YellowDot /> Reconnecting...\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <Dot /> Connected to <b>{channelName}</b>\r\n        </div>\r\n      )}\r\n    </ConnectionStatusText>\r\n  );\r\n}\r\n","const { default: styled } = require(\"styled-components\");\r\n\r\nexport default styled.button`\r\n  border: none;\r\n  height: 50px;\r\n  font-family: \"Poppins\";\r\n  font-weight: bold;\r\n  font-size: 18px;\r\n  line-height: 27px;\r\n  color: #ffffff;\r\n  background-color: #505dd6;\r\n  border-radius: 25px;\r\n  margin-bottom: 10px;\r\n\r\n  &:hover {\r\n    background-color: #444fb6;\r\n  }\r\n\r\n  &:focus,\r\n  button:active {\r\n    border: none;\r\n  }\r\n\r\n  &:disabled {\r\n    background-color: #a7aeeb;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ExternalContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  width: 100%;\r\n`;\r\n\r\nconst InternalContainer = styled.div`\r\n  margin-right: 25px;\r\n  margin-left: 25px;\r\n  text-align: center;\r\n  width: 100%;\r\n  max-width: 330px;\r\n`;\r\n\r\nexport default function Container({ children }) {\r\n  return (\r\n    <ExternalContainer key=\"external\">\r\n      <InternalContainer key=\"internal\">{children}</InternalContainer>\r\n    </ExternalContainer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport PlayerButton from \"./PlayerButton\";\r\nimport ConnectionStatus from \"./ConnectionStatus\";\r\nimport Button from \"./Button\";\r\nimport Container from \"./Container\";\r\n\r\nconst TopIcon = styled.img`\r\n  height: 55px;\r\n  margin-top: 25px;\r\n`;\r\n\r\nconst FullButton = styled(Button)`\r\n  width: 100%;\r\n`;\r\n\r\nconst HalfButton = styled(Button)`\r\n  width: calc(50% - 5px);\r\n`;\r\n\r\nconst FlexContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst PlayerContainer = styled(FlexContainer)`\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst TopBar = styled.div`\r\n  align-items: center;\r\n`;\r\n\r\nfunction GamePage({\r\n  gameState,\r\n  sendStageUpdate,\r\n  sendAliveUpdate,\r\n  loading,\r\n  reconnecting,\r\n}) {\r\n  return (\r\n    <Container>\r\n      <TopBar>\r\n        <TopIcon src=\"icon.png\" alt=\"Among-ot Icon\" />\r\n      </TopBar>\r\n      <ConnectionStatus\r\n        reconnecting={reconnecting}\r\n        channelName={gameState.channel_name}\r\n      />\r\n      <FullButton\r\n        disabled={gameState.game_stage === \"lobby\" || loading}\r\n        onClick={() => {\r\n          sendStageUpdate(\"lobby\");\r\n        }}\r\n      >\r\n        Lobby\r\n      </FullButton>\r\n      <br />\r\n      <FlexContainer>\r\n        <HalfButton\r\n          disabled={gameState.game_stage === \"tasks\" || loading}\r\n          onClick={() => {\r\n            sendStageUpdate(\"tasks\");\r\n          }}\r\n        >\r\n          Tasks\r\n        </HalfButton>\r\n        <HalfButton\r\n          disabled={gameState.game_stage === \"discussion\" || loading}\r\n          onClick={() => {\r\n            sendStageUpdate(\"discussion\");\r\n          }}\r\n        >\r\n          Discussion\r\n        </HalfButton>\r\n      </FlexContainer>\r\n      <section>\r\n        <h2>Players</h2>\r\n        <PlayerContainer>\r\n          {gameState.players.map((p) => (\r\n            <PlayerButton\r\n              player={p}\r\n              loading={loading}\r\n              sendAliveUpdate={sendAliveUpdate}\r\n            />\r\n          ))}\r\n        </PlayerContainer>\r\n      </section>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default GamePage;\r\n","import React from \"react\";\r\n\r\nexport default function Title({ className }) {\r\n  return (\r\n    <div className={className}>\r\n      <img src=\"logo192.png\" height=\"110\" alt=\"Among-ot Icon\" />\r\n      <br />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { syncIdLength } from \"./config.json\";\r\n\r\nconst CodeInputWrapper = styled.input`\r\n  text-transform: uppercase;\r\n  font-family: \"Poppins\";\r\n  font-size: 48px;\r\n  height: 80px;\r\n  width: 100%;\r\n  border-radius: 5px;\r\n  box-sizing: border-box;\r\n  border: 2px solid #b3b3b3;\r\n  text-align: center;\r\n  margin-bottom: 10px;\r\n  caret-color: transparent;\r\n  user-select: initial;\r\n\r\n  &::placeholder {\r\n    color: #d9d9d9;\r\n  }\r\n\r\n  &:focus::placeholder {\r\n    color: transparent;\r\n  }\r\n`;\r\n\r\nexport default function CodeInput({ syncId, setSyncId }) {\r\n  return (\r\n    <CodeInputWrapper\r\n      key=\"codeinput\"\r\n      placeholder=\"ABC123\"\r\n      value={syncId}\r\n      maxLength={syncIdLength}\r\n      onInput={(e) => {\r\n        if (e.target.value.length > syncIdLength)\r\n          e.target.value = e.target.value.slice(0, syncIdLength);\r\n        setSyncId(e.target.value.toUpperCase());\r\n      }}\r\n      autoComplete=\"off\"\r\n      autoCorrect=\"off\"\r\n      autoCapitalize=\"off\"\r\n      spellCheck=\"false\"\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport { syncIdLength } from \"./config.json\";\r\nimport Button from \"./Button\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ConnectButtonWrapper = styled(Button)`\r\n  width: 100%;\r\n`;\r\n\r\nexport default function ConnectButton({ syncId, connectToGame, loading }) {\r\n  return (\r\n    <ConnectButtonWrapper\r\n      disabled={(syncId || \"\").length !== syncIdLength || loading}\r\n      onClick={connectToGame}\r\n    >\r\n      Connect\r\n    </ConnectButtonWrapper>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ExternalContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  width: 100%;\r\n  height: 100vh;\r\n`;\r\n\r\nconst InternalContainer = styled.div`\r\n  margin-right: 25px;\r\n  margin-left: 25px;\r\n  text-align: center;\r\n  align-self: center;\r\n  width: 100%;\r\n  max-width: 330px;\r\n`;\r\n\r\nexport default function VerticalContainer({ children }) {\r\n  return (\r\n    <ExternalContainer key=\"external\">\r\n      <InternalContainer key=\"internal\">{children}</InternalContainer>\r\n    </ExternalContainer>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport Button from \"./Button\";\r\nimport styled from \"styled-components\";\r\nimport Color from \"color\";\r\n\r\nexport default function LinkButton({ link, children, color, margin }) {\r\n  const LinkButtonWrapper = styled(Button)`\r\n    background-color: ${color};\r\n    width: 100%;\r\n    cursor: pointer;\r\n    ${margin ? \"margin-top: 20px;\" : \"\"}\r\n\r\n    &:hover {\r\n      background-color: ${Color(color).darken(0.07)};\r\n    }\r\n\r\n    &:focus,\r\n    button:active {\r\n      border: none;\r\n    }\r\n  `;\r\n\r\n  function openLink() {\r\n    window.open(link);\r\n  }\r\n\r\n  return <LinkButtonWrapper onClick={openLink}>{children}</LinkButtonWrapper>;\r\n}\r\n","import React from \"react\";\r\n\r\nimport styled from \"styled-components\";\r\nimport LinkButton from \"./LinkButton\";\r\n\r\nconst DiscordIcon = styled.img`\r\n  height: 15px;\r\n  margin-right: 10px;\r\n`;\r\n\r\nexport default function DiscordButton() {\r\n  return (\r\n    <LinkButton color=\"#7289DA\" link=\"https:///\" margin>\r\n      <DiscordIcon src=\"discord.svg\" alt=\"\" />\r\n      Add the bot to your server\r\n    </LinkButton>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport Title from \"./Title\";\r\nimport CodeInput from \"./CodeInput\";\r\nimport ConnectButton from \"./ConnectButton\";\r\nimport VerticalContainer from \"./VerticalContainer\";\r\nimport DiscordButton from \"./DiscordButton\";\r\n\r\nfunction CodePage({ syncId, setSyncId, connectToGame, loading }) {\r\n  return (\r\n    <VerticalContainer centerVertically>\r\n      <Title className=\"title\" />\r\n      <div>\r\n        <CodeInput syncId={syncId} setSyncId={setSyncId} />\r\n        <ConnectButton\r\n          loading={loading}\r\n          syncId={syncId}\r\n          connectToGame={connectToGame}\r\n        />\r\n        <DiscordButton />\r\n      </div>\r\n    </VerticalContainer>\r\n  );\r\n}\r\n\r\nexport default CodePage;\r\n","import React, { useState } from \"react\";\r\n\r\nimport GamePage from \"./GamePage\";\r\nimport CodePage from \"./CodePage\";\r\n\r\nimport openSocket from \"socket.io-client\";\r\n\r\nimport NoSleep from \"nosleep.js\";\r\nconst noSleep = new NoSleep();\r\nnoSleep.enable();\r\n\r\nfunction App() {\r\n  const idFromPath = window.location.pathname.split(\"/\").join(\"\");\r\n  const [syncId, setSyncId] = useState(idFromPath);\r\n\r\n  const [connected, setConnected] = useState(false);\r\n\r\n  const [reconnecting, setReconnecting] = useState(false);\r\n\r\n  const [socket, setSocket] = useState();\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [gameState, setGameState] = useState({\r\n    sync_id: \"\",\r\n    channel_name: \"\",\r\n    game_stage: \"lobby\",\r\n    players: [],\r\n  });\r\n\r\n  function sendStageUpdate(stage) {\r\n    setLoading(true);\r\n    socket.emit(\r\n      \"setStage\",\r\n      JSON.stringify({\r\n        sync_id: gameState.sync_id,\r\n        game_stage: stage,\r\n      })\r\n    );\r\n  }\r\n\r\n  function sendAliveUpdate(color, alive) {\r\n    setLoading(true);\r\n    socket.emit(\r\n      \"setAlive\",\r\n      JSON.stringify({\r\n        sync_id: gameState.sync_id,\r\n        color,\r\n        alive,\r\n      })\r\n    );\r\n  }\r\n\r\n  function connectToGame() {\r\n    const newSocket = openSocket(\r\n      process.env.REACT_APP_SYNC_SERVER_ADDRESS || \"nguyenbinhanltv.github.io/among-ot-sync\"\r\n    );\r\n\r\n    setLoading(true);\r\n\r\n    newSocket.on(\"connect\", () => {\r\n      newSocket.emit(\"join\", syncId);\r\n    });\r\n\r\n    newSocket.on(\"gameStateUpdate\", (state) => {\r\n      setLoading(false);\r\n      setConnected(true);\r\n      setGameState(state);\r\n    });\r\n\r\n    newSocket.on(\"gameEnded\", () => {\r\n      setSyncId(\"\");\r\n      setConnected(false);\r\n    });\r\n\r\n    newSocket.on(\"connect_error\", () => {\r\n      setConnected(false);\r\n    });\r\n    newSocket.on(\"connect_timeout\", () => {\r\n      setConnected(false);\r\n    });\r\n    newSocket.on(\"disconnect\", () => {\r\n      setConnected(false);\r\n    });\r\n    newSocket.on(\"reconnecting\", () => {\r\n      setReconnecting(true);\r\n    });\r\n    newSocket.on(\"reconnect\", () => {\r\n      setReconnecting(false);\r\n    });\r\n    newSocket.on(\"reconnect_failed\", () => {\r\n      setConnected(false);\r\n      setReconnecting(false);\r\n    });\r\n\r\n    setSocket(newSocket);\r\n  }\r\n\r\n  return connected ? (\r\n    <GamePage\r\n      gameState={gameState}\r\n      reconnecting={reconnecting}\r\n      sendAliveUpdate={sendAliveUpdate}\r\n      sendStageUpdate={sendStageUpdate}\r\n      loading={loading}\r\n    />\r\n  ) : (\r\n    <CodePage\r\n      syncId={syncId}\r\n      setSyncId={setSyncId}\r\n      connectToGame={connectToGame}\r\n      loading={loading}\r\n    />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as Sentry from \"@sentry/react\";\r\nimport {\r\n  Integrations\r\n} from \"@sentry/tracing\";\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nSentry.init({\r\n  dsn: process.env.REACT_APP_SENTRY_DSN,\r\n  integrations: [\r\n    new Integrations.BrowserTracing({\r\n      tracingOrigins: [process.env.REACT_APP_SYNC_SERVER_ADDRESS],\r\n      beforeNavigate: context => {\r\n        return {\r\n          ...context,\r\n          name: window.location.pathname.replace(/[A-Z0-9]{6}$/, '/'),\r\n        }\r\n      }\r\n    }),\r\n  ],\r\n  tracesSampleRate: 1.0,\r\n});\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\n\r\nif (rootElement.hasChildNodes()) {\r\n  ReactDOM.hydrate( < App / > , rootElement);\r\n} else {\r\n  ReactDOM.render( < App / > , rootElement);\r\n}"],"sourceRoot":""}